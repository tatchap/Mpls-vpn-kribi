hostname PE2  # Set the router hostname
!
ip vrf ancien_port              # Create the VRF named "ancien_port"
 rd 1:2                         # Route Distinguisher uniquely identifies VPN routes across the core :contentReference[oaicite:1]{index=1}
 # Import/export route-targets for full mesh connectivity
 route-target import 1:1       # Import routes from VRF 1 (Emergence)
 route-target import 1:2       # Import own VRF routes
 route-target import 1:3       # Import routes from VRF 3 (Mboro)
 route-target import 1:4       # Import routes from VRF 4 (Rep_Yde)
 route-target export 1:1       # Export VRF routes to VRF 1
 route-target export 1:2       # Export to self
 route-target export 1:3       # Export to VRF 3
 route-target export 1:4       # Export to VRF 4
!
interface f0/0
 ip address 172.60.30.49 255.255.255.240  # Connects to P2 backbone router
 mpls ip                                # Enable MPLS on this interface for label switching :contentReference[oaicite:2]{index=2}
 no shutdown
!
interface f0/1
 ip vrf forwarding ancien_port        # Bind this interface to the VRF "ancien_port"
 ip address 172.60.30.50 255.255.255.240 # Connects to CE2 (Ancien Port)
 no shutdown
!
interface Loopback0
 ip address 20.0.0.20 255.255.255.255     # Use stable loopback for BGP/OSPF ID and sessions
!
router ospf 1
 network 172.60.30.48 0.0.0.15 area 0    # Advertise backbone link to P2 in OSPF
 network 20.0.0.20 0.0.0.0 area 0        # Advertise Loopback0 for stable IGP and LDP peer
!
router eigrp 1
 address-family ipv4 vrf ancien_port     # Use EIGRP within the VRF "ancien_port"
  autonomous-system 1                    # Define EIGRP AS number
  network 172.60.30.48 0.0.0.15          # Advertise CE2-facing subnet into VRF EIGRP
!
router bgp 1
 bgp log-neighbor-changes               # Log any BGP neighbor status changes
 neighbor 20.0.0.10 remote-as 1         # Peer to PE1
 neighbor 20.0.0.30 remote-as 1         # Peer to PE3
 neighbor 20.0.0.40 remote-as 1         # Peer to PE4
 neighbor 20.0.0.10 update-source Loopback0  # Use loopback as BGP source
 neighbor 20.0.0.30 update-source Loopback0
 neighbor 20.0.0.40 update-source Loopback0
!
 address-family vpnv4                   # Configure MP-BGP for VPNv4 route exchange
  neighbor 20.0.0.10 activate
  neighbor 20.0.0.30 activate
  neighbor 20.0.0.40 activate
  neighbor 20.0.0.10 send-community both
  neighbor 20.0.0.30 send-community both
  neighbor 20.0.0.40 send-community both
 exit-address-family
!
 address-family ipv4 vrf ancien_port   # Inside the VRF "ancien_port"
  redistribute eigrp 1 metric 1        # Send EIGRP-learned routes into MP-BGP
!
router eigrp 1
 address-family ipv4 vrf ancien_port
  redistribute bgp 1 metric 1024 1 255 1 1500  
  # Redistribute BGP VPN routes into VRF EIGRP so CE2 can learn remote prefixes.
  # Metrics follow Cisco best practice: bandwidth, delay, reliability, load, MTU :contentReference[oaicite:3]{index=3}
